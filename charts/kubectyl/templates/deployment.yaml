apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kuber.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: kuber
  {{- with .Values.kuber.deploymentAnnotations }}
  annotations:
    {{- range $key, $value := . }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  replicas: {{ .Values.kuber.replicaCount }}
  selector:
    matchLabels:
      app: kuber
  template:
    metadata:
      labels:
        app: kuber
    spec:
      serviceAccountName: {{ include "kubectyl.serviceAccountName" . }}
      initContainers:
      - name: tmp
        image: busybox
        command: ["sh", "-c", "cp /tmp/kubectyl/config.yml /etc/kubectyl/config.yml"]
        volumeMounts:
          - name: config
            mountPath: "/tmp/kubectyl"
          - name: tmp
            mountPath: "/etc/kubectyl"
      - name: port
        image: mikefarah/yq
        command: ["sh", "-c", "yq --inplace '.api.port == \"80\"' /etc/kubectyl/config.yml"]
        volumeMounts:
          - name: tmp
            mountPath: "/etc/kubectyl"
      - name: disable
        image: mikefarah/yq
        command: ["sh", "-c", "yq --inplace '.api.ssl.enabled == \"false\"' /etc/kubectyl/config.yml"]
        volumeMounts:
          - name: tmp
            mountPath: "/etc/kubectyl"
      containers:
      - name: kuber
        image: {{ .Values.kuber.image }}
        volumeMounts:
          - name: ssl-certs
            mountPath: /etc/kubectyl/certs
            readOnly: true
          - name: tmp
            mountPath: "/etc/kubectyl"
        ports:
        - containerPort: 80
          name: web
      volumes:
        - name: ssl-certs
          secret:
            secretName: {{ .Release.Name }}-tls
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: kuber-config
            defaultMode: 0755       
