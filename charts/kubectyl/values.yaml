# Default values for Kubectyl.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

## Overrides for generated resource names
# See templates/_helpers.tpl
global:
  timezone: UTC
ingress:
  # The Ingress class for routing external traffic to services
  class: nginx
  # The hostname for the Panel application
  panel: panel.example.com
  # The hostname for the Kuber application
  kuber: kuber.example.com
  tls:
    # Boolean to create the certificate resource
    # false is useful for cert-manager + traefik automation
    create: true
    # The issuer to use for obtaining TLS certificates
    clusterIssuer: letsencrypt-prod
  # Extra annotations for ingress resource
  # nginx known annotations
  # annotations:
  #   nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  #   nginx.ingress.kubernetes.io/proxy-body-size: 100m
  #   nginx.ingress.kubernetes.io/proxy-read-timeout: "120s"
  #   nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  annotations: {}
panel:
  # The image for the Panel application
  image: quay.io/kubectyl/panel:develop
  # The storage class to use for Panel's persistent volume
  # To use default K8s storage class set this value to ""
  # This is mutually exclusive with panel.existingVolumeClaim
  storageClass: ""
  # Provide existing volume claim to be used instead of created claim
  # This is mutually exclusive with panel.storageClass
  existingVolumeClaim: ""
  # The email address for Letsencrypt
  # Used for Panel only as a reference to enable cert-manager
  email: abc@example.com
  # Annoatations to apply to the Service
  serviceAnnotations: {}
  # Annoatations to apply to the StatefulSet
  statefulSetAnnotations: {}
kuber:
  # The image for the Kuber application
  image: quay.io/kubectyl/kuber:develop
  # Will be automatically set to 1 after Panel installation
  replicaCount: 0
  # Annotatations to apply to the Service
  serviceAnnotations: {}
  # Annoatations to apply to the Deployment
  deploymentAnnotations: {}
mariadb:
  # Boolean to control if chart should create the mariadb deployment
  create: true
  global:
    storageClass: ""
  # Specify external MariaDB host if applicable
  # Do not use with mariadb.create:true
  externalHost: ""
  volumePermissions:
    enabled: true
  image:
    debug: true
  auth:
    # The MariaDB database name
    database: panel
    # The MariaDB username
    username: kubectyl
    # The MariaDB password for the user
    password: SecretPassword
    # The MariaDB root password
    rootPassword: SuperSecretPassword
  primary:
    persistence:
      # The size of the primary MariaDB pod's persistent volume
      size: 1Gi
  secondary:
    # The number of secondary MariaDB replicas
    replicaCount: 0
redis:
  # Boolean to control if chart should create the mariadb deployment
  create: true
  global:
    # The storage class to use for redis' persistent volume
    # To use default K8s storage class set this value to ""
    storageClass: ""
  # Specify external MariaDB host if applicable
  # Do not use with mariadb.create:true
  externalHost: ""
  auth:
    # Enable authentication for Redis
    enabled: false
    # Password for Redis authentication
    password: ""
  master:
    persistence:
      # The size of the Redis master pod's persistent volume
      size: 1Gi
  replica:
    # The number of Redis replicas
    replicaCount: 0
  sentinel:
    # Enable Redis sentinel for high availability
    enabled: false
serviceAccount:
  # Enable the creation of a ServiceAccount for MariaDB pods
  create: true
  # If not set and create is true, a name is generated using the mariadb.fullname template
  name: ""
